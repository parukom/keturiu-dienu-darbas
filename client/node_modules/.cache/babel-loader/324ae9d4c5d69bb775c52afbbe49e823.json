{"ast":null,"code":"var _jsxFileName = \"/Users/tomasdudovicius/Desktop/CodeAcademy/React/keturiu-dienu-darbas/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MovieById from \"./components/Movie/MovieById\";\nimport HomeTop from \"./components/HomeTop/HomeTop\";\nimport Trailer from \"./components/Trailer/Trailer\";\nimport Footer from \"./components/Footer/Footer\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport AddMovie from \"./components/addMovie/AddMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  let navigate = useNavigate(); // connection to backend\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetch(`/api/movies/`).then(res => res.json()).then(data => {\n      setMovies(data);\n    });\n  }, []); // add movie to IMDb\n  /// postinti pets\n\n  const addMovie = async e => {\n    e.preventDefault();\n    const movie = {\n      title: e.target.title.value,\n      releaseYear: e.target.releaseYear.value,\n      IMDB: e.target.imdb.value,\n      photos: {\n        poster: [e.photos_poster.value],\n        cutscenes: [e.photos_cutscenes.value]\n      },\n      videos: {\n        cutscenes: [e.target.cutscenes.value],\n        trailers: [e.target.trailers.value]\n      },\n      genres: [e.target.genres.value],\n      description: e.target.description.value,\n      castAndCrew: {\n        director: e.target.director.value,\n        writers: [{\n          name: e.target.writersName.value,\n          role: e.target.writersRole.value\n        }],\n        actors: [{\n          name: e.target.actorsName.value,\n          character: [e.target.character.value],\n          actorPhoto: e.target.actorPhoto.value\n        }]\n      }\n    };\n    await fetch(\"/api/movies\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(movie)\n    }).then(() => setData([...data, movie])).then(() => navigate(\"/\", {\n      replace: true\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/addmovie\",\n        element: /*#__PURE__*/_jsxDEV(AddMovie, {\n          addMovie: addMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomeTop, {\n          data: movies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/movie/:id\",\n        element: /*#__PURE__*/_jsxDEV(MovieById, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/trailer\",\n        element: /*#__PURE__*/_jsxDEV(Trailer, {\n          data: movies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/trailer/:id\",\n        element: /*#__PURE__*/_jsxDEV(Trailer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ToY7+NtTYnUUSvu/RU4OUWLJ1Rw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Route","Routes","useEffect","useState","useNavigate","MovieById","HomeTop","Trailer","Footer","PageNotFound","AddMovie","App","data","setData","navigate","movies","setMovies","fetch","then","res","json","addMovie","e","preventDefault","movie","title","target","value","releaseYear","IMDB","imdb","photos","poster","photos_poster","cutscenes","photos_cutscenes","videos","trailers","genres","description","castAndCrew","director","writers","name","writersName","role","writersRole","actors","actorsName","character","actorPhoto","method","headers","body","JSON","stringify","replace"],"sources":["/Users/tomasdudovicius/Desktop/CodeAcademy/React/keturiu-dienu-darbas/client/src/App.jsx"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport MovieById from \"./components/Movie/MovieById\";\nimport HomeTop from \"./components/HomeTop/HomeTop\";\nimport Trailer from \"./components/Trailer/Trailer\";\nimport Footer from \"./components/Footer/Footer\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport AddMovie from \"./components/addMovie/AddMovie\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  let navigate = useNavigate();\n  // connection to backend\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetch(`/api/movies/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setMovies(data);\n      });\n  }, []);\n  // add movie to IMDb\n  /// postinti pets\n  const addMovie = async (e) => {\n    e.preventDefault();\n    const movie = {\n      title: e.target.title.value,\n      releaseYear: e.target.releaseYear.value,\n      IMDB: e.target.imdb.value,\n      photos: {\n        poster: [e.photos_poster.value],\n        cutscenes: [e.photos_cutscenes.value],\n      },\n      videos: {\n        cutscenes: [e.target.cutscenes.value],\n        trailers: [e.target.trailers.value],\n      },\n      genres: [e.target.genres.value],\n      description: e.target.description.value,\n      castAndCrew: {\n        director: e.target.director.value,\n        writers: [\n          {\n            name: e.target.writersName.value,\n            role: e.target.writersRole.value,\n          },\n        ],\n        actors: [\n          {\n            name: e.target.actorsName.value,\n            character: [e.target.character.value],\n            actorPhoto: e.target.actorPhoto.value,\n          },\n        ],\n      },\n    };\n\n    await fetch(\"/api/movies\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(movie),\n    })\n      .then(() => setData([...data, movie]))\n      .then(() => navigate(\"/\", { replace: true }));\n  };\n\n  return (\n    <>\n      <Navbar />\n      <Routes>\n        <Route path=\"/addmovie\" element={<AddMovie addMovie={addMovie} />} />\n        <Route path=\"*\" element={<PageNotFound />} />\n        <Route path=\"/\" element={<HomeTop data={movies} />} />\n        <Route path=\"/movie/:id\" element={<MovieById />} />\n        <Route path=\"/trailer\" element={<Trailer data={movies} />} />\n        <Route path=\"/trailer/:id\" element={<Trailer />} />\n      </Routes>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}